branches:
  only:
    - tests

environment:
  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python34"
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python34-x64"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36-x64"

install:
  # Install winfsp (Windows FUSE API) from Chocolatey
  - "cinst winfsp"

  # Prepend current Python to the PATH of this build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date
  - "python -m pip install --upgrade pip"

  # Upgrade to the latest version of setuptools
  - "python -m pip install --upgrade setuptools"
  
  # Install package
  - "python setup.py install"

build_script:
  - "echo build step is important"

test_script:
  - ps: |
      $env:Path += ";%PYTHON%;%PYTHON%\Scripts;%PATH%"
      $pyArgs = @(
          "-m",
          "kaitaifs.cli",
          "rar",
          (Join-Path -Path (Get-Location).Path -ChildPath '/examples/test.rar'),
          "K:"
      )

      # Start in background first so it doesn't block
      $backgroundArgs = ($pyArgs -join ' ')
      Start-Job -Name bg -ScriptBlock { param($backgroundArgs)
          $procid = (Start-Process 'python' -Args $backgroundArgs -passthru).ID
          Write-Output $procid
      } -Arg $backgroundArgs

      Wait-Job -Name bg
      $procid = Receive-Job -Name bg

      # Wait for kaitaifs
      Start-Sleep -s 1

      # Check if fs was mounted
      if(![System.IO.File]::Exists('K:\README.rst')){
          'ERROR'
          # If not print output to console for debugging
          & "python" $pyArgs
      }
      else {
          'SUCCESS'
          # Kill process to unmount
          Stop-Process -Id $procid
      }
